package boj_15596;

	/* ===================================================
	 * BOJ(백준) 6단계 - 함수
	 * 
	 * <<boj_15596>>
	 *  배열에 저장된 정수의 합을 구하는 메서드 작성하기
	 *  https://www.acmicpc.net/problem/15596
	 * 
	 *  정수 n개가 주어졌을 때, n개의 합을 구하는 함수를 작성하시오.
	 *  작성해야 하는 함수는 다음과 같다.
	 *  
	 *  Java: long sum(int[] a); (클래스 이름: Test)
	 *   a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
	 *   리턴값: a에 포함되어 있는 정수 n개의 합
	 *   
	 * ===================================================
	 * 
	 * [필요 지식]
	 * 
	 * 1. 클래스와 객체
	 * 2. 메서드
	 * 
	 * ===================================================
	 * 
	 * 1. 클래스와 객체
	 * 
	 *  1) 클래스
	 *   - 객체를 정의해둔 설계도 -> 객체를 사용하기 위해서
	 *   - 데이터 + 함수 -> 서로 관련된 여러 기능, 속성을 하나로 저장할 수 있는 공간
	 *   - 사용자 정의 타입 -> 사용자가 원하는 타입을 직접 만들 수 있음
	 *   
	 *  2) 객체 (iv 묶음)
	 *   - 실제로 존재하는 것. 용도는 기능과 속성에 따라 다름
	 *   
	 *  3) 클래스(설계도) -> 인스턴스화 -> 인스턴스(제품)
	 *  
	 *  4) 객체 생성 및 저장 : 클래스명 참조변수명 = new 클래스명(~~~~);
	 *  
	 *  5) 객체배열(참조변수의 배열) : 클래스명[i] <- 하나하나가 클래스들의 참조변수
	 *  
	 * ===================================================
	 * 
	 * 2. 메서드
	 * 
	 *  1) 정의 : 문장들을 작업단위로 이름 붙인 것
	 *  2) 역할 : 값(인수)을 입력받아서 처리하고, 결과를 반환(출력)
	 *  3) 메서드의 장점
	 *   - 중복코드를 줄일 수 있음
	 *   - (한 곳에서 수행하기 때문에) 관리가 쉽다.
	 *   - 코드 재사용 가능
	 *   - 코드가 간결해서 이해하기 쉬움
	 *  
	 *  4) 메서드 작성
	 *   - 반복되는 여러 문장을 메서드로 작성
	 *   - 하나의 메서드는 한가지 기능만 수행하도록 작성
	 *  
	 *  5) 메서드의 구조 = 선언부(머리) + 구현부(몸통)
	 *         선언부 : 제어자 + 반환타입 + 메서드명 (데이터타입 변수명, 데이터타입 변수명, ...)
	 *         구현부 : {/ 메서드 호출시 실행될 코드};
	 *  6) 메서드 호출 : 참조변수. 메서드 이름(데이터1, 데이터2, ...)
	 *  7) 메서드 실행의 흐름
	 *       인스턴스 생성 -> 메서드 호출 -> 메서드 내 코드 수행 -> 호출한 곳으로 반환       
	 * 
	 * ===================================================
	 */


public class Test {
	long sum(int[] a) { // int 배열을 인수로 하여 배열의 모든 값들의 합을 반환하는 객체
		long sum = 0;
		for(int i=0; i<a.length; i++) {
			sum +=a[i];
		}
		return sum;
	}
}
