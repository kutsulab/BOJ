package boj_10818;

import java.util.Scanner;

	/* ===================================================
	 * BOJ(백준) 5단계 - 1차원 배열
	 * 
	 * <<boj_10818>>
	 * 주어진 배열에서 최솟값과 최댓값을 찾는 문제 (풀이 1 : 배열의 요소를 순차적으로 접근하여 최대, 최솟값을 계속 갱신하기)
	 * https://www.acmicpc.net/problem/10818
	 * 
	 * 입력>
	 * 첫째 줄에 정수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄에는 N개의 정수를 공백으로 구분해서 주어진다.
	 * 모든 정수는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같은 정수이다.
	 * 
	 * 출력>
	 * 첫째 줄에 주어진 정수 N개의 최솟값과 최댓값을 공백으로 구분해 출력한다.
	 *  
	 * (예제 입력) 
	 *  5
	 *  20 10 35 30 7
	 *  
	 * (예제 출력)
	 * 	7 35
	 * 
	 * ===================================================
	 * 
	 * [필요 지식]
	 * 
	 * 1. 배열
	 * 
	 * ===================================================
	 * 
	 * 1. 배열
	 *  같은 타입의 여러 변수를 하나의 묶으로 다루는 것
	 *  
	 *   1) 생성
	 *    타입[] 변수이름;
	 *    변수이름 = new 타입[길이];
	 *   
	 *   2) 배열의 각 요소
	 *    배열이름[0], 배열이름[1], 배열이름[2], ... , 배열이름[길이-1] : 배열의 각 요소
	 *    
	 *   3) 배열의 초기화
	 *    배열이름[index] = 값;
	 *  
	 * ===================================================
	 */

public class Main1 {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int[] values = new int[scanner.nextInt()]; // 최초 입력값을 길이로 하는 배열 생성
		
		
		for (int i=0; i<values.length; i++) {
			values[i] = scanner.nextInt(); // 배열의 길이만큼을 입력받음
		}
		scanner.close();
		
		int min = values[0]; // 최솟값, 최댓값을 0번 인덱스의 요소로 초기화
		int max = values[0];
		
		for (int i=1; i<values.length; i++) {
			if (values[i]<min) min = values[i]; // 배열의 각 요소에 순서대로 접근하여 더 크거나 작을 경우 최솟값, 최댓값 갱신
			if (values[i]>max) max = values[i];
		}
		
		System.out.println(min+" "+max);
	}
	
}
