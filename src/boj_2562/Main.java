package boj_2562;

import java.util.Scanner;

	/* ===================================================
	 * BOJ(백준) 5단계 - 1차원 배열
	 * 
	 * <<boj_2562>>
	 * 주어진 배열에서 최댓값, 최댓값이 속한 index 찾기 (1차원 배열)
	 * https://www.acmicpc.net/problem/2562
	 * 
	 * 9개의 서로 다른 자연수가 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 번째 수인지를 구하는 프로그램을 작성하시오.
	 * 예를 들어, 서로 다른 9개의 자연수
	 * 3, 29, 38, 12, 57, 74, 40, 85, 61
	 * 이 주어지면, 이들 중 최댓값은 85이고, 이 값은 8번째 수이다.
	 * 
	 * 입력>
	 *  첫째 줄부터 아홉 번째 줄까지 한 줄에 하나의 자연수가 주어진다. 주어지는 자연수는 100 보다 작다.
	 * 
	 * 출력>
	 *  첫째 줄에 최댓값을 출력하고, 둘째 줄에 최댓값이 몇 번째 수인지를 출력한다.
	 *  
	 * (예제 입력) 
	 *  3
	 *  29
	 *  38
	 *  12
	 *  57
	 *  74
	 *  40
	 *  85
	 *  61
	 *  
	 * (예제 출력)
	 * 	85
	 *  8
	 * 
	 * ===================================================
	 * 
	 * [필요 지식]
	 * 
	 * 1. 배열
	 * 
	 * ===================================================
	 * 
	 * 1. 배열
	 *  같은 타입의 여러 변수를 하나의 묶으로 다루는 것
	 *  
	 *   1) 생성
	 *    타입[] 변수이름;
	 *    변수이름 = new 타입[길이];
	 *   
	 *   2) 배열의 각 요소
	 *    배열이름[0], 배열이름[1], 배열이름[2], ... , 배열이름[길이-1] : 배열의 각 요소
	 *    
	 *   3) 배열의 초기화
	 *    배열이름[index] = 값;
	 *  
	 * ===================================================
	 * 
	 */


public class Main {

	public static void main(String[] args) {
		
		Scanner scanner = new Scanner(System.in);
		
		final int LENGTH = 9; // 9번 입력 받음
		int[] values = new int[LENGTH];
		
		for (int i=0; i<values.length; i++) {
			values[i] = scanner.nextInt();
		}
		scanner.close();
		
		int max = values[0];
		int maxIndex = 0;
		
		for (int i=1; i<9; i++) {
			if (values[i]>max) {
				max = values[i]; // 최댓값 갱신
				maxIndex = i; // 최댓값 index 갱신
			}
		}
		
		System.out.print(max+"\n"+(maxIndex+1));
	}

}
